services:
  user-service:
    container_name: user-service-container
    image: user-service
    expose:
      - "80"
      - "8080"
    ports:
      - "8081:8080"
    networks:
      - local-travelpoints-network
    build:
      context: ./user-service
      dockerfile: ./Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://travelpoints.crk4ggmecmeg.eu-central-1.rds.amazonaws.com:3306/user_db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: travelpoints

  attraction-service:
    container_name: attraction-service-container
    image: attraction-service
    expose:
      - "80"
      - "8080"
    ports:
      - "8082:8080"
    networks:
      - local-travelpoints-network
    build:
      context: ./attraction-service
      dockerfile: ./Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://travelpoints.crk4ggmecmeg.eu-central-1.rds.amazonaws.com:3306/attraction_db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: travelpoints
    env_file:
      - ../.env
  nginx:
    image: nginx:latest
    container_name: reverse_proxy
    volumes:
      - ./nginx/nginx.local.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    networks:
      - local-travelpoints-network
    depends_on:
      - user-service

networks:
  local-travelpoints-network:
    driver: bridge